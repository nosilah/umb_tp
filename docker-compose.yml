version: '3.8'
services:
  php:
    image: repox/laravel-dev-php:8.0
    container_name: app
    volumes:
      - ./portalApi:/var/www/html
    working_dir: /var/www/html
    networks:
      - app-network
    ports:
      - 9001:8000
    # command: chown -R www-data:www-data .
    
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "8081:80"
    volumes:
      - ./portalApi:/var/www/html
      - ./docker/nginx/docker-vhost.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: db
    links:
      - php
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/mysql.conf.d/bind.cnf
      - dbdata:/var/lib/mysql
    networks:
      - app-network
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: portalapi
      MYSQL_PASSWORD: rootpass
    networks:
      - app-network
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links: 
        - db:db
    ports:
        - 85:80
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_PASSWORD: rootpass
    networks:
      - app-network
  mailhog:
    container_name: mailhog
    image: mailhog/mailhog:v1.0.0
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - app-network
    

  portal:
<<<<<<< HEAD
    # image: node:16.6.1-alpine3.12
    container_name: portal
=======
>>>>>>> 4ec308949fc9cf574ed0a92319d91176126ca275
    build: 
      context: .
      dockerfile: ./portal/Dockerfile
    command: sh -c " npm run server "
    volumes:
      - ./portal:/usr/app
    tty: true
    ports:
<<<<<<< HEAD
      - "3000:3000"
    networks:
      - app-network


  # ubuntu:
  #   container_name: ubuntu
  #   image: ubuntu
  #   restart: on-failure
  #   command: ["sleep","infinity"]
  #   volumes:
  #     - ./portal:/home/app
  #   tty: true
  #   ports:
  #     - "3003:3000"
  #   networks:
  #     - app-network
=======
      - "3001:3000"
    networks:
      - app-network
    
>>>>>>> 4ec308949fc9cf574ed0a92319d91176126ca275
  
#Docker Networks
networks:
  app-network:
    driver: bridge
# #Volumes>
volumes:
  dbdata:
    driver: local
