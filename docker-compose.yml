version: '3.8'
services:
  #service-laravel
  portalapi:
    image: repox/laravel-dev-php:8.0
    container_name: portalapi
    volumes:
      - ./portalApi:/var/www/html
    working_dir: /var/www/html
    networks:
      - app-network
    ports:
      - 9001:9000
    # command: chown -R www-data:www-data .
    
  #service for node app 
  portal:
    build: 
      context: .
      dockerfile: ./portal/Dockerfile
    container_name: portal
    command: sh -c " npm run server "
    volumes:
      - ./portal:/usr/app
    tty: true
    ports:
      - "3001:3000"
    networks:
      - app-network
    
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "8081:80"
    volumes:
      - ./portalApi:/var/www/html
      - ./docker/nginx/docker-vhost.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: db
    links:
      - portalapi
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/mysql.conf.d/bind.cnf
      - dbdata:/var/lib/mysql
    networks:
      - app-network
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: portalapi
      MYSQL_PASSWORD: rootpass
    networks:
      - app-network
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links: 
        - db:db
    ports:
        - 85:80
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_PASSWORD: rootpass
    networks:
      - app-network
  mailhog:
    image: mailhog/mailhog:v1.0.0
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - app-network
#Docker Networks
networks:
  app-network:
    driver: bridge
# #Volumes>
volumes:
  dbdata:
    driver: local
